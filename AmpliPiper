#!/bin/bash
# written by Philipp Resl

#if [[ "$OSTYPE" == "darwin"* ]]; then
# HT="darwin"
# US="root"
#else
# HT="linux"
# US=$USER
#fi

# this needs to be set because on Linux docker created files will be owned by root by default.
unset DOCKER_USER
if [[ "$OSTYPE" == "linux-gnu" ]]; then
 DOCKER_USER="--user $(id -u):$(id -g)"
elif [[ "$OSTYPE" == "darwin"* ]]; then #nothing to be done on MacOS
 DOCKER_USER=""
fi


# determine how AmpliPiper should be executed:

HOW="local"
if [[ "$1" == "docker" ]]; then
	HOW="docker"
fi
if [[ "$1" == "singularity" || "$1" == "apptainer" ]]; then
	HOW="singularity"
fi
if [[ "$1" == "auto" ]]; then
	if command -v docker 2>&1 > /dev/null;
	then
		HOW="docker"
	elif command -v singularity 2>&1 > /dev/null; #singularity is preferred over docker
	then
		HOW="singularity"
	fi
fi

shift
if [[ "$HOW" == "docker" ]]; then
	# check if AmpliPiper Docker images already exists:
	VER=$(git rev-parse --short HEAD)
	if [[ "$(docker images -q amplipiper:$VER 2> /dev/null)" == "" ]]; then
  		echo "AmpliPiper docker image for version: ("$VER") does not exist, will build it first. This can take some time, please be patient."
  		docker build -t amplipiper:$VER . #--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) --build-arg USER=$US --build-arg GROUP=$(id -g -n $USER) --build-arg HOSTTYPE=$HT .
	fi
	BINDPOINTS="-v $(pwd):$(pwd)"
	echo "Running AmpliPiper through docker"
	echo "DOCKER COMMAND: docker run --rm -it $DOCKER_USER $BINDPOINTS -w $(pwd) amplipiper:$VER AmpliPiper.sh $@"
	docker run --rm -it $DOCKER_USER $BINDPOINTS -w $(pwd) amplipiper:$VER AmpliPiper.sh $@	
fi

if [[ "$HOW" == "singularity" ]]; then
	BINDPOINTS="-B $(pwd)"
	echo "Running AmpliPiper through singularity"
	echo "SINGULARITY/APPTAINER COMMAND: singularity exec $BINDPOINTS docker://ghcr.io/nhmvienna/amplipiper:main AmpliPiper.sh $@"
	singularity exec $BINDPOINTS docker://ghcr.io/nhmvienna/amplipiper:main AmpliPiper.sh $@	
fi

if [[ "$HOW" == "local" ]]; then
	echo "Running AmpliPiper locally"
	bash shell/AmpliPiper.sh $@
fi
